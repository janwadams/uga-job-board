import { useEffect, useState } from 'react';
import { createClient } from '@supabase/supabase-js';
import Link from 'next/link'; // ADDED: Import Link

const supabaseAdmin = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

interface AdminUser {
  user_id: string;
  role: string;
  is_active: boolean;
  email: string | null;
  last_sign_in_at: string | null;
  jobs_posted: number;
}

export default function AdminDashboard() {
  const [users, setUsers] = useState<AdminUser[]>([]);
  const [loading, setLoading] = useState(true);

  const fetchAdminData = async () => {
    setLoading(true);
    try {
      const response = await fetch('/api/admin/list-users');
      const data = await response.json();

      if (response.ok) {
        setUsers(data.users);
      } else {
        console.error('Failed to fetch admin data:', data.error);
      }
    } catch (error) {
      console.error('Error fetching data:', error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchAdminData();
  }, []);

  const handleStatusToggle = async (userId: string, currentStatus: boolean) => {
    try {
      const response = await fetch('/api/admin/update-user-status', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId: userId, isActive: !currentStatus }),
      });

      const data = await response.json();

      if (response.ok) {
        console.log(data.message);
        fetchAdminData();
      } else {
        console.error('Failed to update user status:', data.error);
      }
    } catch (error) {
      console.error('Error updating status:', error);
    }
  };

  return (
    <div className="p-8">
      <div className="flex justify-between items-center mb-4">
        <h1 className="text-2xl font-bold mb-4 text-red-800">ðŸ‘¥ Admin: Manage Users</h1>
        {/* ADDED: Link to the new analytics dashboard */}
        <Link href="/admin/analytics">
          <button className="bg-red-700 text-white px-4 py-2 rounded hover:bg-red-800">
            View Analytics
          </button>
        </Link>
      </div>
      
      {loading ? (
        <p>Loading...</p>
      ) : (
        <table className="min-w-full table-auto border-collapse border border-gray-200">
          <thead className="bg-gray-100">
            <tr>
              <th className="border px-4 py-2">User ID</th>
              <th className="border px-4 py-2">Current Role</th>
              <th className="border px-4 py-2">Status</th>
              <th className="border px-4 py-2">Email</th>
              <th className="border px-4 py-2">Last Login</th>
              <th className="border px-4 py-2">Jobs Posted</th>
              <th className="border px-4 py-2">Actions</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user.user_id} className="text-center">
                <td className="border px-4 py-2">{user.user_id}</td>
                <td className="border px-4 py-2 capitalize">{user.role}</td>
                <td className="border px-4 py-2">
                  {user.is_active ? (
                    <span className="text-green-600 font-semibold">Active</span>
                  ) : (
                    <span className="text-red-600 font-semibold">Disabled</span>
                  )}
                </td>
                <td className="border px-4 py-2 text-sm">{user.email}</td>
                <td className="border px-4 py-2 text-sm">
                  {user.last_sign_in_at
                    ? new Date(user.last_sign_in_at).toLocaleString()
                    : 'Never'}
                </td>
                <td className="border px-4 py-2">{user.jobs_posted}</td>
                <td className="border px-4 py-2">
                  <button
                    onClick={() => handleStatusToggle(user.user_id, user.is_active)}
                    className={`px-3 py-1 rounded ${
                      user.is_active ? 'bg-red-600 hover:bg-red-700' : 'bg-green-600 hover:bg-green-700'
                    } text-white`}
                  >
                    {user.is_active ? 'Disable' : 'Enable'}
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}