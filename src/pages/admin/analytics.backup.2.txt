import { useState, useEffect } from 'react';
import Head from 'next/head';
import Link from 'next/link'; // ADDED: Import Link

interface TimeSeriesData {
  date: string;
  total_postings: number;
  active_postings: number;
  views: number;
  apply_clicks: number;
}

interface TopCompany {
  company: string;
  views: number;
  apply_clicks: number;
}

interface MetricsData {
  total_postings: number;
  active_postings: number;
  time_series: TimeSeriesData[];
  top_companies: TopCompany[];
}

export default function AdminAnalyticsDashboard() {
  const [metrics, setMetrics] = useState<MetricsData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchMetrics = async () => {
      try {
        const response = await fetch('/api/admin/metrics');
        const data = await response.json();
        
        if (response.ok) {
          setMetrics(data);
        } else {
          setError(data.error);
        }
      } catch (err) {
        setError('Failed to fetch metrics data.');
      } finally {
        setLoading(false);
      }
    };
    fetchMetrics();
  }, []);

  const handleExportCSV = () => {
    if (!metrics) return;

    const timeSeriesHeaders = 'date,total_postings,active_postings,views,apply_clicks';
    const timeSeriesRows = metrics.time_series.map(row => 
      `${row.date},${row.total_postings},${row.active_postings},${row.views},${row.apply_clicks}`
    ).join('\n');

    const topCompaniesHeaders = 'company,views,apply_clicks';
    const topCompaniesRows = metrics.top_companies.map(row => 
      `${row.company},${row.views},${row.apply_clicks}`
    ).join('\n');

    const csvContent = `${timeSeriesHeaders}\n${timeSeriesRows}\n\n${topCompaniesHeaders}\n${topCompaniesRows}`;
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    const url = URL.createObjectURL(blob);
    
    link.setAttribute('href', url);
    link.setAttribute('download', 'admin_dashboard_metrics.csv');
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  if (loading) return <div className="p-4">Loading metrics...</div>;
  if (error) return <div className="p-4 text-red-600">Error: {error}</div>;

  return (
    <div className="p-8 max-w-4xl mx-auto">
      <Head>
        <title>Admin Analytics Dashboard</title>
      </Head>
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold text-red-800">üìä Admin Analytics Dashboard</h1>
        {/* ADDED: Link to navigate back */}
        <div className="space-x-4">
          <Link href="/admin/dashboard">
            <button className="bg-gray-400 text-white px-4 py-2 rounded hover:bg-gray-500">
              ‚Üê Back to Admin Dashboard
            </button>
          </Link>
          <button
            onClick={handleExportCSV}
            className="bg-red-700 text-white px-4 py-2 rounded hover:bg-red-800"
          >
            Export CSV
          </button>
        </div>
      </div>

      {metrics && (
        <div className="space-y-8">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-white p-6 rounded shadow">
              <h2 className="text-xl font-semibold text-gray-700 mb-2">Total Postings</h2>
              <p className="text-4xl font-bold text-red-800">{metrics.total_postings}</p>
            </div>
            <div className="bg-white p-6 rounded shadow">
              <h2 className="text-xl font-semibold text-gray-700 mb-2">Active Postings</h2>
              <p className="text-4xl font-bold text-red-800">{metrics.active_postings}</p>
            </div>
          </div>

          <div className="bg-white p-6 rounded shadow">
            <h2 className="text-xl font-semibold text-gray-700 mb-4">Time-Series Counts (Placeholder)</h2>
            <div className="overflow-x-auto">
              <table className="min-w-full table-auto border-collapse border border-gray-200">
                <thead>
                  <tr className="bg-gray-100 text-gray-700">
                    <th className="border px-4 py-2">Date</th>
                    <th className="border px-4 py-2">Total Postings</th>
                    <th className="border px-4 py-2">Active Postings</th>
                    <th className="border px-4 py-2">Views</th>
                    <th className="border px-4 py-2">Apply Clicks</th>
                  </tr>
                </thead>
                <tbody>
                  {metrics.time_series.map((item) => (
                    <tr key={item.date} className="text-center">
                      <td className="border px-4 py-2">{item.date}</td>
                      <td className="border px-4 py-2">{item.total_postings}</td>
                      <td className="border px-4 py-2">{item.active_postings}</td>
                      <td className="border px-4 py-2">{item.views}</td>
                      <td className="border px-4 py-2">{item.apply_clicks}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
          
          <div className="bg-white p-6 rounded shadow">
            <h2 className="text-xl font-semibold text-gray-700 mb-4">Top Companies by Engagement (Placeholder)</h2>
            <div className="overflow-x-auto">
              <table className="min-w-full table-auto border-collapse border border-gray-200">
                <thead>
                  <tr className="bg-gray-100 text-gray-700">
                    <th className="border px-4 py-2">Company</th>
                    <th className="border px-4 py-2">Views</th>
                    <th className="border px-4 py-2">Apply Clicks</th>
                  </tr>
                </thead>
                <tbody>
                  {metrics.top_companies.map((item) => (
                    <tr key={item.company} className="text-center">
                      <td className="border px-4 py-2">{item.company}</td>
                      <td className="border px-4 py-2">{item.views}</td>
                      <td className="border px-4 py-2">{item.apply_clicks}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}